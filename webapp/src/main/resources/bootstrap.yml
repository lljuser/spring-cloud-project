server:
  port: 8888

###-----1 client---------
eureka:
  instance:
    prefer-ip-address: true
    #ip-address: 127.0.0.1
  client:
    service-url:
      defaultZone: http://eureka:eureka@${eurekaHostIP}:8761/eureka/
spring:
  application:
    name: webapp
  cloud:
    inetutils:
      preferred-networks:
        - 10.1
        - 192.168.1
    config:
      #uri: http://localhost:8090/
      #connect config-server by eureka-server
      discovery:
        enabled: true
        service-id: config-server
      profile: ${gitActive}
      lable: master
      username: config
      password: config
      fail-fast: true
      retry: 3
    bus:
      trace:
        enabled: true
#webapp-server:
#  ribbon:
    ###-----client-----config server list for old project  no eureka only use ribbon
    #listOfServers: localhost:8080,localhost:8001
    #NIWSServerListClassName: com.netflix.loadbalancer.ConfigurationBasedServerList
    #NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule

feign:
  client:
    config:
      webapp-server:
        connectTimeout: 1000
        readTimeout: 1000
        loggerLevel: full
#        errorDecoder: com.example.SimpleErrorDecoder
#        retryer: com.example.SimpleRetryer
#        requestInterceptors:
#          - com.example.FooRequestInterceptor
#          - com.example.BarRequestInterceptor
#        decode404: false
#        encoder: com.example.SimpleEncoder
#        decoder: com.example.SimpleDecoder
#        contract: com.example.SimpleContract

feign:compression.request.enabled: true
feign.compression.response.enabled: true
###open fegin use hystrix then can fallback
feign.hystrix.enabled: false

#hystrix:
#  threadPool:
#    defautl:
#      coreSize: 100
#      queueSizeRejectionThreshold: 25
#      maxQueueSize: 50


management:
  endpoints:
    web:
      exposure:
        include: "*"

logging:
  level:
    com.example.webapp.service.UserFeignClient: DEBUG